/**
 * @WebNode - A NodeJS MVC Framework and HTTP Server
 * 
 * @author: Pedro Nasser
 * @link: http://pedroncs.com/projects/webnode/
 * @license: http://pedroncs.com/projects/webnode/#license
 * @copyright: Copyright &copy; 2012 WebNode Server
 */

/**
 * Loads all tests and return the result.
 *
 * @author Pedro Nasser
 * @version $Id$
 * @since 1.0.12
 */

require('../src/wnInit');

var validTests = 0,
	lastErrors = 0,
	passedTests = 0,
	testTimeout = -1,
	testDir=cwd+'test/tmp';

if (fs.existsSync(testDir))
	wrench.rmdirSyncRecursive(testDir, function () {});
fs.mkdirSync(testDir,0755);

console.log('[*] Running tests on `'+testDir+'`...');

wns.console.setEvents({
	'endTest': {}
});

wns.console.errors=0;
wns.console.addListener('exception', function () {
	wns.console.errors++;
	wns.console.e.endTest();
});

setTimeout(function () {
	process.exit(1);
},60000*2);

_walk('./test',function (err,tests) {

    tests=tests.sort(function(a, b) {
		return a < b ? -1 : 1;
    });
    
	if (err)
		process.exit(-1);

	var i = 0;
	(function () {

		if(tests.length == i)
		{
			console.log('');
			console.log('[*] '+validTests+' tests performed');
			console.log('[*] '+passedTests+' have been successfully executed');
			console.log('[*] '+(validTests-passedTests)+' failed');
			if (fs.existsSync(testDir))
				wrench.rmdirSyncRecursive(testDir);
			process.exit(wns.console.errors);
		}

		var args = arguments;
		if (tests[i].split('.').pop()!='js')
		{
			i++;
			args.callee();
		} else {
			wns.console.getEvent('endTest').once(function () {
				clearTimeout(testTimeout);
				if (lastErrors == wns.console.errors)
					passedTests++;
				i++;
				validTests++;
				args.callee();
			});
			try {
				console.log('[*] Running: '+tests[i]);
				lastErrors = wns.console.errors;
				testTimeout=setTimeout(function () {
					wns.console.errors++;
					wns.console.e.endTest();
				},10000);
				wns.console.exec(wns.console.getFile(tests[i]));
			} catch (e)
			{
				wns.console.errors++;
				wns.console.e.endTest();
			}
		}

	})(i);

});