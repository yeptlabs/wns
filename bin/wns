#!/usr/bin/env node
var prog = require('./client.js');

console.log('  Welcome to WNS Manager.')

// Default commands.
prog
	.option('-n, --new [name]','setup a new server')
	.option('-e, --exec [cmd]','execute command on module')
	.parse(process.argv);

// If is selected create new server...
if (prog.new!==undefined && prog.new!==true)
{
	var name = prog.new,
		newPath = path.resolve(process.cwd()+'/'+prog.new).replace(/\\/g,'/')+'/';
	if (!fs.existsSync(newPath))
		fs.mkdir(name);
	var success=wns.console.buildServer(newPath);
	if (!success)
		console.log('Could not build new server...');
} else if (prog.exec) {
	var cmd = prog.exec+' '+prog.args.join(' ');
	if (prog.isServer) {
		var server = wns.console.addServer(path.relative(prog.wnsPath,prog._modulePath))
		server.exec(cmd);
	} else if (!isApp)
		wns.console.exec(cmd);
} else if (prog.isValidModule)
{
	prog
		.option('-c, --config','redefine module config')
		.option('-p, --package [install/remove] [packageName]','server package control')
		.option('-g, --generate [what?]','server package control')

	if (prog.isServer)
		prog
			.option('-r, --run','run module')

	prog
		.parse(process.argv);
	if (prog.run)
	{
		wns.console.addServer(path.relative(prog.wnsPath,prog._modulePath));
		prog.keepAlive=true;
	} else if (prog.config) 
	{

	} else if (prog.generate && prog.package != true) 
	{
		var args = prog.args;
			args.unshift(prog.generate);
		var fork = require('child_process').fork,
			wpm = fork(__dirname + '/wnsg', args);
		wpm.on('close', function () { process.exit(); })
		prog.keepAlive=true;
	} else if (prog.package && prog.package != true)
	{
		var args = prog.args;
			args.unshift(prog.package);
		var fork = require('child_process').fork,
			wpm = fork(__dirname + '/wnspm', args);
		wpm.on('close', function () { process.exit(); })
		prog.keepAlive=true;
	} else
		prog.outputHelp();
} else
	prog.outputHelp();

(!prog.keepAlive)&&process.exit()